---
  - name: Centos pre-upgrade
    hosts: "{{ target_host }}"
    become: yes
    become_user: root
    vars:
      ansible_python_interpreter: /usr/bin/python2
    vars_prompt:
      - name: confirm_target
        prompt: "Is '{{ target_host }}' the correct target host? (yes/no)"
        private: no
    tasks:

      - name: Confirm target host
        fail:
          msg: "Aborted playbook execution. Confirm target host before proceeding."
        when: confirm_target != "yes"
    
      - name: Check CentOS version
        command: cat /etc/centos-release
        register: centos_release
        changed_when: false
        failed_when: false

      - name: Ensure playbook only runs on CentOS 7
        fail:
          msg: "This playbook is intended to run on CentOS 7 only."
        when: "'CentOS Linux release 7' not in centos_release.stdout"
        
      - name: Gather package facts
        package_facts:
          manager: auto
        register: package_facts

      - name: Check if PostgreSQL 15 is installed
        assert:
          that:
            - "'postgresql15-server' in package_facts.ansible_facts.packages"
          fail_msg: "This playbook is intended to run on machines with PostgreSQL 15 installed."

      - name: Create temp directory
        file:
          path: /var/temp/
          state: directory

      - name: Create files directory
        file:
          path: /var/temp/files/
          state: directory

      - name: Create backup directory
        file:
          path: /var/temp/backup/
          state: directory

      - name: Copy files to target
        synchronize:
          src: ~/files/  # Path to your files on the control node
          dest: /var/temp/files/       # Destination path on the target machine
          recursive: yes

      - name: Backup current iptables rules
        shell: iptables-save > /var/temp/backup/iptables.rules

      - name: stop apache
        service:
          name: httpd
          state: stopped

      - name: Install system updates for centos systems
        yum:
          name: '*'
          state: latest
          update_cache: yes
         #cache_valid_time: 3600


#reboot zodat eventuele nieuwe kernels gebruikt worden

      - name: Reboot host and wait for it to restart
        reboot:
          msg: "Reboot initiated by Ansible"
          connect_timeout: 5
          reboot_timeout: 600
          pre_reboot_delay: 0
          post_reboot_delay: 30
          test_command: whoami

      - name: clean yum
        command: /bin/yum clean all 
        args:
          warn: false

      - name: Install DNF
        yum:
          name: dnf
          state: present
      - name: Update /etc/hosts with repo.almalinux.org IP
        lineinfile:
          path: /etc/hosts
          line: "67.222.0.50 repo.almalinux.org"
        become: yes

      - name: Add entry for ftp.nluug.nl to /etc/hosts
        lineinfile:
          path: /etc/hosts
          line: "145.220.21.40 ftp.nluug.nl"
        become: yes
        
      - name: ensure ELevate
        yum:
          name: /var/temp/files/elevate.rpm
          state: present

      - name: ensure leapp-upgrade
        yum:
          name: leapp-upgrade
          state: present

      - name: ensure leapp-data-centos
        yum:
          name: leapp-data-centos
          state: present
           
      - name: ensure yum-utils
        yum:
          name: yum-utils
          state: present


      - name: Remove old kernels
        command: package-cleanup -y --oldkernels --count=1

        
      - name: create leapp directory
        file:
          path: /var/log/leapp/
          state: directory

        
      - name: create leapp answerfile
        copy:
          dest: /var/log/leapp/answerfile
          content: |
            [remove_pam_pkcs11_module_check]
            confirm = True

        
      - name: Cleanup previous preupgrade reports
        file:
          path: '{{ item }}'
          state: absent
        loop:
          - /var/log/leapp/leapp-report.txt
          - /var/log/leapp/leapp-report.json

        
      - name: Generate leapp preupgrade report
        command: leapp preupgrade
        args:
          creates: /var/log/leapp/leapp-report.txt
        register: leapp_preupgrade

        
      - name: Debug leapp preupgrade output
        debug:
          var: leapp_preupgrade
          verbosity: 2

        
      - name: Upgrade
        command: leapp upgrade
  
      - name: Reboot host and wait for it to restart
        reboot:
          msg: "Reboot initiated by Ansible"
          connect_timeout: 5
          reboot_timeout: 1200
          pre_reboot_delay: 0
          post_reboot_delay: 30
          test_command: whoami





            
