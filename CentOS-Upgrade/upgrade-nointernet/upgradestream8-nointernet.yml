- name: Centos pre-upgrade
  hosts: "{{ target_host }}"
  become: yes
  become_user: root
  vars:
    ansible_python_interpreter: /usr/bin/python3
  vars_prompt:
    - name: confirm_target
      prompt: "Is '{{ target_host }}' the correct target host? (yes/no)"
      private: no
  tasks:

    - name: Confirm target host
      fail:
        msg: "Aborted playbook execution. Confirm target host before proceeding."
      when: confirm_target != "yes"
        
    - name: Check CentOS version
      command: cat /etc/centos-release
      register: centos_release
      changed_when: false
      failed_when: false

    - name: Ensure playbook runs only on CentOS Stream 8
      fail:
        msg: "This playbook is intended to run on CentOS Stream 8 only."
      when: "'CentOS Stream release 8' not in centos_release.stdout"
        
    - name: Gather package facts
      package_facts:
        manager: auto
      register: package_facts

    - name: Check if PostgreSQL 15 is installed
      assert:
        that:
          - "'postgresql15-server' in package_facts.ansible_facts.packages"
        fail_msg: "This playbook is intended to run on machines with PostgreSQL 15 installed."

    - name: update/upgrade centos to 9
      command: dnf -y --releasever=9-stream --allowerasing --setopt=deltarpm=false distro-sync
      args:
        warn: false

    - name: Rebuild rpm DB
      command: rpmdb --rebuilddb
      args:
        warn: false

    - name: dnf clean packages
      command: dnf clean packages
      args:
        warn: false

    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/centos*.repo
      ignore_errors: true

    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/epel*.repo
      ignore_errors: true
      
    - name: Install system updates for centos systems
      yum:
        name: '*'
        state: latest
        update_cache: yes

    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/centos*.repo
      ignore_errors: true

    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/epel*.repo
      ignore_errors: true
  
    - name: groupupdate
      command: dnf -y groupupdate "Core" "Minimal Install" --allowerasing
      args:
        warn: false


    - name: Remove rescue kernel
      command: rm -f /boot/vmlinuz-0-rescue-b2a198ecbfdd451cb905f76f825af01e /boot/initramfs-0-rescue-b2a198ecbfdd451cb905f76f825af01e.img /boot/loader/entries/b2a198ecbfdd451cb905f76f825af01e-0-rescue.conf
      args:
        warn: false

    - name: replace rescue kernel
      command: /usr/lib/kernel/install.d/51-dracut-rescue.install add $(uname -r) /boot /boot/vmlinuz-$(uname -r)
      args:
        warn: false

    - name: Reboot host and wait for it to restart
      reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami

    - name: dnf modules reset 
      ansible.builtin.file:
        state: absent 
        path: /etc/dnf/modules.d

    - name: dnf modules reset 
      ansible.builtin.file:
        state: directory 
        path: /etc/dnf/modules.d
        
    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/centos*.repo
      ignore_errors: true

    - name: Find and remove CentOS repos
      shell: rm -f /etc/yum.repos.d/epel*.repo
      ignore_errors: true          
      
    - name: install packages
      command: yum localinstall -y /var/temp/files/man-pages-overrides-9.0.0.0-1.el9.noarch.rpm /var/temp/files/libfido2-1.6.0-7.el9.x86_64.rpm /var/temp/files/libcbor-0.7.0-5.el9.x86_64.rpm /var/temp/files/javapackages-filesystem-6.0.0-3.el9.noarch.rpm /var/temp/files/xorg-x11-font-utils-7.5-53.el9.x86_64.rpm /var/temp/files/authd-1.4.4-5.el8_0.1.x86_64.rpm /var/temp/files/rcs-5.10.1-3.el9.x86_64.rpm /var/temp/files/xinetd-2.3.15-24.el8.x86_64.rpm
      args:
        warn: false

    - name: disable default postgres repo
      command: dnf module -y disable postgresql
      args:
        warn: false
          
    - name: clean yum
      command: /bin/yum clean all 
      args:
        warn: false

    - name: ensure postgresql15-server
      dnf:
        name: postgresql15-server
        state: present

    - name: ensure postgresql15-contrib
      dnf:
        name: postgresql15-contrib
        state: present

    - name: Check if PostgreSQL database is initialized.
      stat:
        path: "/var/lib/pgsql/15/data/pg_hba.conf"
      register: postgres

    - name: Ensure PostgreSQL database is initialized.
      command: "/usr/pgsql-15/bin/postgresql-15-setup initdb"
      when: not postgres.stat.exists

    - name: ensure apache is at the latest version
      dnf:
        name: httpd
        state: latest

    - name: ensure docker-ce is at the latest version
      dnf:
        name: docker-ce
        state: latest

    - name: ensure python3-psycopg2 is at the latest version
      dnf:
        name: python3-psycopg2
        state: latest
          
    - name: ensure apache is running
      systemd:
        name: httpd
        state: started
        enabled: true
        masked: no
   
    - name: Enable postgres service
      systemd:
        name: postgresql-15.service
        enabled: true
        masked: no
        state: started
          
    - name: dnf upgrade 
      command: dnf upgrade -y --allowerasing
      args:
        warn: false

    - name: reset xinetd
      systemd:
        name: xinetd
        state: restarted
         
    - name: ensure iptables is at the latest version
      dnf:
        name: iptables
        state: latest

    - name: ensure vi is at the latest version
      dnf:
        name: vim
        state: latest

    - name: ensure iptables-services is at the latest version
      dnf:
        name: iptables-services
        state: latest
        
    - name: ensure iptables is running
      systemd:
        name: iptables
        state: started
        enabled: true
        masked: no
          
    - name: Restore iptables rules
      shell: sudo cp /var/temp/backup/iptables.rules /etc/sysconfig/iptables
        
    - name: remove firewalld
      dnf:
        name: firewalld
        state: absent

    - name: ensure logrotate.timer is running
      systemd:
        name: logrotate.timer
        state: started
        enabled: true
        masked: no

    - name: ensure logrotate is running
      systemd:
        name: logrotate
        state: started
        enabled: true
        masked: no
        
    - name: ensure docker is running
      systemd:
        name: docker
        state: started
        enabled: true
        masked: no
        
    - name: Get list of installed kernel-related packages
      command: rpm -qa kernel\* kernel-devel\* kernel-modules\* kernel-modules-extra\* kernel-workaround\*
      register: installed_kernel_related_packages
      changed_when: false

    - name: Remove CentOS 8 kernel-related packages
      yum:
        name: "{{ item }}"
        state: absent
      loop: "{{ installed_kernel_related_packages.stdout_lines }}"
      when: "'el8' in item"
        
    - name: remove temp files 
      ansible.builtin.file:
        state: absent 
        path: /var/temp/files/
        
- name: Refresh COLLATION VERSION in all databases
  hosts: "{{ target_host }}"
  become: yes
  become_user: postgres
  tasks:
    - name: Get hostname
      command: hostname
      register: hostname_result

    - name: Set db_name based on hostname
      set_fact:
        db_name: "{{ hostname_result.stdout | lower | regex_replace('\\..*', '') }}"

    - name: Check if the database exists
      shell: psql -lqt | cut -d \| -f 1 | grep -qw "{{ db_name }}"
      register: db_exists
      ignore_errors: yes

    - name: Refresh COLLATION VERSION for main database
      command: psql -d {{ db_name }} -c "SELECT pg_reload_conf();"
      args:
        warn: false
      when: db_exists.rc == 0

    - name: Refresh COLLATION VERSION for default postgres database
      command: psql -c "ALTER DATABASE postgres REFRESH COLLATION VERSION"
      args:
        warn: false

    - name: Refresh COLLATION VERSION for default template1 database
      command: psql -c "ALTER DATABASE template1 REFRESH COLLATION VERSION"
      args:
        warn: false
